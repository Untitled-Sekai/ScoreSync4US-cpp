name: Build and Release

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write

jobs:
  build:
    name: Build ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
        include:
          - os: ubuntu-latest
            output-name: ss4us-linux
          - os: windows-latest
            output-name: ss4us-windows.exe
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup CMake
      uses: lukka/get-cmake@latest

    - name: Install dependencies (Windows)
      if: matrix.os == 'windows-latest'
      run: |
        vcpkg install curl:x64-windows
        vcpkg install nlohmann-json:x64-windows
        vcpkg integrate install
      
    - name: Install dependencies (Linux)
      if: matrix.os == 'ubuntu-latest'
      run: |
        sudo apt-get update
        sudo apt-get install -y libcurl4-openssl-dev
        sudo apt-get install -y nlohmann-json3-dev

    - name: Build (Windows)
      if: matrix.os == 'windows-latest'
      shell: cmd
      run: |
        if exist build rmdir /s /q build
        mkdir build
        cd build
        cmake .. -DCMAKE_TOOLCHAIN_FILE=C:/vcpkg/scripts/buildsystems/vcpkg.cmake -DCMAKE_CXX_FLAGS="/utf-8 /DNOMINMAX"
        cmake --build . --config Release
        mkdir ..\ss4us-windows
        copy Release\ss4us.exe ..\ss4us-windows\ss4us.exe
        copy C:\vcpkg\installed\x64-windows\bin\libcurl.dll ..\ss4us-windows\
        powershell Compress-Archive -Path ..\ss4us-windows -DestinationPath ..\ss4us-windows.zip

    - name: Build (Linux)
      if: matrix.os == 'ubuntu-latest'
      run: |
        rm -rf build
        mkdir build
        cd build
        cmake ..
        cmake --build .
        cp ss4us ../ss4us-linux
        
    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: ${{ matrix.output-name }}
        path: |
          ss4us-linux
          ss4us-windows.zip
        
  release:
    name: Create Release
    needs: build
    runs-on: ubuntu-latest
    
    steps:
    - name: Download all artifacts
      uses: actions/download-artifact@v4
    
    - name: Create Release
      id: create_release
      uses: softprops/action-gh-release@v1
      with:
        files: |
          ss4us-windows.zip
          ss4us-linux/ss4us-linux
        draft: false
        prerelease: false
        generate_release_notes: true